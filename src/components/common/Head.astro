---
import { ViewTransitions } from 'astro:transitions';

interface Props {
  title: string;
  description: string;
  ogType: string;
  url: string;
  defaultTitle: string;
  defaultUrl: string;
}

const { title, description, ogType, url, defaultTitle, defaultUrl } =
  Astro.props;
---

<head>
  <meta charset="UTF-8" />
  <meta
    name="viewport"
    content="width=device-width, initial-scale=1"
  />
  <meta
    name="format-detection"
    content="telephone=no"
  />
  <title>{title}</title>
  <meta
    name="description"
    content={description}
  />
  <link
    rel="canonical"
    href={url}
  />
  <meta
    property="og:title"
    content={title}
  />
  <meta
    property="og:type"
    content={ogType}
  />
  <meta
    property="og:url"
    content={url}
  />
  <meta
    property="og:image"
    content={`${defaultUrl}/share.png`}
  />
  <meta
    property="og:image:width"
    content="1200"
  />
  <meta
    property="og:image:height"
    content="630"
  />
  <meta
    property="og:site_name"
    content={defaultTitle}
  />
  <meta
    property="og:description"
    content={description}
  />
  <meta
    property="og:locale"
    content="ja_JP"
  />
  <meta
    name="twitter:card"
    content="summary_large_image"
  />
  <link
    rel="icon"
    type="image/x-icon"
    href="/favicon.ico"
  />
  <meta
    name="generator"
    content={Astro.generator}
  />
  <script is:inline>
    document.addEventListener('astro:page-load', () => {
      (function (d) {
        var config = {
            kitId: 'kqn7rmr',
            scriptTimeout: 3000,
            async: true,
          },
          h = d.documentElement,
          t = setTimeout(function () {
            h.className =
              h.className.replace(/\bwf-loading\b/g, '') + ' wf-inactive';
          }, config.scriptTimeout),
          tk = d.createElement('script'),
          f = false,
          s = d.getElementsByTagName('script')[0],
          a;
        h.className += ' wf-loading';
        tk.src = 'https://use.typekit.net/' + config.kitId + '.js';
        tk.async = true;
        tk.onload = tk.onreadystatechange = function () {
          a = this.readyState;
          if (f || (a && a != 'complete' && a != 'loaded')) return;
          f = true;
          clearTimeout(t);
          try {
            // eslint-disable-next-line no-undef
            Typekit.load(config);
            // eslint-disable-next-line no-empty
          } catch (e) {}
        };
        s.parentNode.insertBefore(tk, s);
      })(document);
    });
  </script>
  <ViewTransitions />
</head>
